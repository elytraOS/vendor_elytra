<?xml version="1.0" encoding="utf-8"?>
<!--
/*
** Copyright (C) 2022 elytraOS
**
** SPDX-License-Identifier: Apache-2.0
*/
-->
<resources>

    <!-- Enable round icons by default. -->
    <bool name="config_useRoundIcon">true</bool>

    <!-- Specifies the path that is used by AdaptiveIconDrawable class to crop launcher icons. -->
    <string name="config_icon_mask" translatable="false">"M50 0C77.6 0 100 22.4 100 50C100 77.6 77.6 100 50 100C22.4 100 0 77.6 0 50C0 22.4 22.4 0 50 0Z"</string>

    <!-- Corner radius for bottom sheet system dialogs -->
    <dimen name="config_bottomDialogCornerRadius">16dip</dimen>

    <!-- Corner radius of system buttons -->
    <dimen name="config_buttonCornerRadius">4dip</dimen>

    <!-- Corner radius of system dialogs -->
    <dimen name="config_dialogCornerRadius">8dip</dimen>

    <!-- The amount to scale fullscreen snapshots for Overview and snapshot starting windows. -->
    <item type="dimen" name="config_highResTaskSnapshotScale">0.8</item>

    <!-- Corner radius of system progress bars -->
    <dimen name="config_progressBarCornerRadius">1000dip</dimen>

    <!-- Default list of files pinned by the Pinner Service -->
    <string-array translatable="false" name="config_defaultPinnerServiceFiles">
        <item>"/system/bin/surfaceflinger"</item>
        <item>"/system/framework/framework.jar"</item>
        <item>"/system/framework/services.jar"</item>
        <item>"/system/framework/ext.jar"</item>
        <item>"/system/framework/QPerformance.jar"</item>
        <item>"/system/framework/QXPerformance.jar"</item>
        <item>"/system/framework/UxPerformance.jar"</item>
        <item>"/system/lib/libEGL.so"</item>
        <item>"/system/lib/libGLESv1_CM.so"</item>
        <item>"/system/lib/libGLESv2.so"</item>
        <item>"/system/lib/libGLESv3.so"</item>
        <item>"/system/lib/libgui.so"</item>
        <item>"/system/lib/libhwui.so"</item>
        <item>"/system/lib/libui.so"</item>
        <item>"/system/lib/libvulkan.so"</item>
        <item>"/system/lib64/libEGL.so"</item>
        <item>"/system/lib64/libGLESv1_CM.so"</item>
        <item>"/system/lib64/libGLESv2.so"</item>
        <item>"/system/lib64/libGLESv3.so"</item>
        <item>"/system/lib64/libgui.so"</item>
        <item>"/system/lib64/libhwui.so"</item>
        <item>"/system/lib64/libui.so"</item>
        <item>"/system/lib64/libvulkan.so"</item>
        <item>"/system/system_ext/lib/libcomposerextn.qti.so"</item>
        <item>"/system/system_ext/lib/libdolphin.so"</item>
        <item>"/system/system_ext/lib/liblayerext.qti.so"</item>
        <item>"/system/system_ext/lib/libpenguin.so"</item>
        <item>"/system/system_ext/lib/libpenguin_impl.so"</item>
        <item>"/system/system_ext/lib64/libcomposerextn.qti.so"</item>
        <item>"/system/system_ext/lib64/libdolphin.so"</item>
        <item>"/system/system_ext/lib64/liblayerext.qti.so"</item>
        <item>"/system/system_ext/lib64/libpenguin.so"</item>
        <item>"/system/system_ext/lib64/libpenguin_impl.so"</item>
        <item>"/system/system_ext/priv-app/SystemUI/SystemUI.apk"</item>
        <item>"/vendor/lib/libcamxexternalformatutils.so"</item>
        <item>"/vendor/lib/libipebpsstriping170.so"</item>
        <item>"/vendor/lib/libipebpsstriping.so"</item>
        <item>"/vendor/lib/egl/eglSubDriverAndroid.so"</item>
        <item>"/vendor/lib/egl/libEGL_adreno.so"</item>
        <item>"/vendor/lib/egl/libGLESv1_CM_adreno.so"</item>
        <item>"/vendor/lib/egl/libGLESv2_adreno.so"</item>
        <item>"/vendor/lib/hw/vulkan.adreno.so"</item>
        <item>"/vendor/lib/libCB.so"</item>
        <item>"/vendor/lib/libOpenCL.so"</item>
        <item>"/vendor/lib/libadreno_app_profiles.so"</item>
        <item>"/vendor/lib/libadreno_utils.so"</item>
        <item>"/vendor/lib/libgpudataproducer.so"</item>
        <item>"/vendor/lib/libgsl.so"</item>
        <item>"/vendor/lib/libkcl.so"</item>
        <item>"/vendor/lib/libkernelmanager.so"</item>
        <item>"/vendor/lib/libllvm-glnext.so"</item>
        <item>"/vendor/lib/libllvm-qcom.so"</item>
        <item>"/vendor/lib/libllvm-qgl.so"</item>
        <item>"/vendor/lib64/libcamxexternalformatutils.so"</item>
        <item>"/vendor/lib64/libipebpsstriping170.so"</item>
        <item>"/vendor/lib64/libipebpsstriping.so"</item>
        <item>"/vendor/lib64/egl/eglSubDriverAndroid.so"</item>
        <item>"/vendor/lib64/egl/libEGL_adreno.so"</item>
        <item>"/vendor/lib64/egl/libGLESv1_CM_adreno.so"</item>
        <item>"/vendor/lib64/egl/libGLESv2_adreno.so"</item>
        <item>"/vendor/lib64/hw/vulkan.adreno.so"</item>
        <item>"/vendor/lib64/libCB.so"</item>
        <item>"/vendor/lib64/libOpenCL.so"</item>
        <item>"/vendor/lib64/libadreno_app_profiles.so"</item>
        <item>"/vendor/lib64/libadreno_utils.so"</item>
        <item>"/vendor/lib64/libgpudataproducer.so"</item>
        <item>"/vendor/lib64/libgsl.so"</item>
        <item>"/vendor/lib64/libkcl.so"</item>
        <item>"/vendor/lib64/libkernelmanager.so"</item>
        <item>"/vendor/lib64/libllvm-glnext.so"</item>
        <item>"/vendor/lib64/libllvm-qcom.so"</item>
        <item>"/vendor/lib64/libllvm-qgl.so"</item>
        <item>"/apex/com.android.art/javalib/core-oj.jar"</item>
        <item>"/apex/com.android.art/javalib/core-libart.jar"</item>
    </string-array>

    <!-- True if home app should be pinned via Pinner Service -->
    <bool name="config_pinnerHomeApp">true</bool>

    <!-- Should the pinner service pin the Camera application? -->
    <bool name="config_pinnerCameraApp">true</bool>

    <!-- Whether action menu items should be displayed in ALLCAPS or not.
         Defaults to true. If this is not appropriate for specific locales
         it should be disabled in that locale's resources. -->
    <bool name="config_buttonTextAllCaps">false</bool>

    <!-- Disable stock OTA components if installed -->
    <string-array name="config_globallyDisabledComponents" translatable="false">
        <item>com.google.android.as/com.google.intelligence.sense.ambientmusic.history.HistoryContentProvider</item>
        <item>com.google.android.as/com.google.intelligence.sense.ambientmusic.history.HistoryActivity</item>
        <item>com.google.android.as/com.google.intelligence.sense.ambientmusic.AmbientMusicSettingsActivity</item>
        <item>com.google.android.as/com.google.intelligence.sense.ambientmusic.AmbientMusicNotificationsSettingsActivity</item>
        <item>com.google.android.as/com.google.intelligence.sense.ambientmusic.AmbientMusicSetupWizardActivity</item>
        <item>com.google.android.gsf/com.google.android.gsf.update.SystemUpdateActivity</item>
        <item>com.google.android.gsf/com.google.android.gsf.update.SystemUpdateService$Receiver</item>
        <item>com.google.android.gsf/com.google.android.gsf.update.SystemUpdateService$SecretCodeReceiver</item>
        <item>com.google.android.gsf/com.google.android.gsf.update.SystemUpdateServiceReceiver</item>
        <item>com.google.android.gms/com.google.android.gms.update.phone.PopupDialog</item>
        <item>com.google.android.gms/com.google.android.gms.update.OtaSuggestionSummaryProvider</item>
        <item>com.google.android.gms/com.google.android.gms.update.SystemUpdateActivity</item>
        <item>com.google.android.gms/com.google.android.gms.update.SystemUpdateService$Receiver</item>
        <item>com.google.android.gms/com.google.android.gms.update.SystemUpdateService$ActiveReceiver</item>
        <item>com.google.android.gms/com.google.android.gms.update.SystemUpdateService$SecretCodeReceiver</item>
        <item>com.google.android.gms/com.google.android.gms.update.SystemUpdateServiceReceiver</item>
    </string-array>

    <!-- Force enabling of some services that could have been previously disabled -->
    <string-array name="config_forceEnabledComponents" translatable="false">
        <item>com.google.android.gsf/com.google.android.gsf.update.SystemUpdateService</item>
        <item>com.google.android.gms/com.google.android.gms.update.SystemUpdateService</item>
    </string-array>

    <!-- Set this to true to enable the platform's auto-power-save modes like doze and
         app standby.  These are not enabled by default because they require a standard
         cloud-to-device messaging service for apps to interact correctly with the modes
         (such as to be able to deliver an instant message to the device even when it is
         dozing).  This should be enabled if you have such services and expect apps to
         correctly use them when installed on your device.  Otherwise, keep this disabled
         so that applications can still use their own mechanisms. -->
    <bool name="config_enableAutoPowerModes">true</bool>

    <!-- Whether safe headphone volume is enabled or not (country specific). -->
    <bool name="config_safe_media_volume_enabled">false</bool>

    <!--  Whether Multiuser UI should be shown -->
    <bool name="config_enableMultiUserUI">true</bool>

    <!--  Maximum number of supported users -->
    <integer name="config_multiuserMaximumUsers">8</integer>

    <!-- Fingerprint from a certified device against current platform SPL level -->
    <string name="config_certifiedFingerprint" translatable="false">google/raven/raven:13/TP1A.221005.002/9012097:user/release-keys</string>

    <!-- Colon separated list of package names that should be granted Notification Listener access -->
    <string name="config_defaultListenerAccessPackages" translatable="false">com.google.android.apps.nexuslauncher:com.google.android.setupwizard:com.google.android.apps.pixelmigrate:com.google.android.as:com.google.android.projection.gearhead:com.android.launcher3</string>

    <!-- Model from a certified device -->
    <string name="config_certifiedModel" translatable="false">Pixel 6 Pro</string>

</resources>
